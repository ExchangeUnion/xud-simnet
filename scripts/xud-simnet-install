#!/bin/bash

check_prereq() {


# verify existing of ~/xud-simnet
temp=`ls ~/xud-simnet`
if [ $? -ne 0 ]; then
	echo "~/xud-simnet is missing"
	exit 1
fi
# verify git
temp=`which git`
if [ $? -ne 0 ]; then
	echo "git is missing"
	exit 1
fi
# verify make
temp=`which make`
if [ $? -ne 0 ]; then
	echo "make is missing"
	exit 1
fi
# verify npm
temp=`which npm`
if [ $? -ne 0 ]; then
	echo "npm is missing"
	exit 1
fi
# verify python
temp=`which python`
if [ $? -ne 0 ]; then
	echo "python is missing"
	exit 1
fi
if ! command -v python3.7
 then
   echo "python3.7 is missing"
   exit 1
fi
# verify killall
temp=`which killall`
if [ $? -ne 0 ]; then
	echo "killall is missing"
	exit 1
fi
# verify go
temp=`which go`
if [ $? -ne 0 ]; then
	echo "go is missing"
	exit 1
fi
# verify PATH
temp=`echo $PATH|grep xud-simnet/scripts`
if [ $? -ne 0 ]; then
	echo "PATH is not properly set. Did you source setup.bash?"
	exit 1
fi
# verify PATH
temp=`echo $PATH|grep xud-simnet/go/bin`
if [ $? -ne 0 ]; then
	echo "PATH is not properly set. Did you source setup.bash?"
	exit 1
fi
echo "found all pre-requisites"
}


make_dir () {
if ! mkdir "$1"; then
	echo "$1 already exists. Please run xud-simnet-clean to clean all leftovers before installing."
	exit 1
fi
}

if ! cd ~/xud-simnet; then
  	  echo "~/xud-simnet is missing"
	exit 1
fi	

source setup.bash
check_prereq
#make_dir ~/xud-simnet/btcd
make_dir ~/xud-simnet/ltcd
make_dir ~/xud-simnet/lndbtc
make_dir ~/xud-simnet/lndltc
make_dir ~/xud-simnet/xud-wd

##### glide
#if ! go get -u github.com/Masterminds/glide > /tmp/xud-simnet-install.log 2>&1; then
#	echo "unable to install glide"
#	exit 1
#fi 
#echo "glide installed"

#### ltcd
if ! git clone https://github.com/ltcsuite/ltcd.git $GOPATH/src/github.com/ltcsuite/ltcd >> /tmp/xud-simnet-install.log 2>&1; then
	echo "unable to git clone ltcd"
	exit 1
fi
cd $GOPATH/src/github.com/ltcsuite/ltcd
echo "ltcd repo downloaded"
if ! git apply ~/xud-simnet/scripts/ltcd.patch >> /tmp/xud-simnet-install.log 2>&1 ; then
	echo "unable to apply ltcd pacth"
	exit 1
fi
echo "ltcd patched"
if ! GO111MODULE=on go install -v . ./cmd/...  >> /tmp/xud-simnet-install.log 2>&1; then
	echo "unable to go instll ltcd"
	exit 1
fi  
 
echo "ltcd installed"
#### btcd
#if ! git clone https://github.com/btcsuite/btcd.git $GOPATH/src/github.com/btcsuite/btcd >> /tmp/xud-simnet-install.log 2>&1; then
#	echo "unable to git clone btcd"
#	exit 1
#fi
#cd $GOPATH/src/github.com/btcsuite/btcd
#echo "btcd repo downloaded"
#if ! git apply ~/xud-simnet/scripts/btcd.patch >> /tmp/xud-simnet-install.log 2>&1 ; then
#	echo "unable to apply btcd pacth"
#	exit 1
#fi
#echo "btcd patched"
#if ! GO111MODULE=on go install -v . ./cmd/...  >> /tmp/xud-simnet-install.log 2>&1 ; then
#	echo "unable to go instll btcd"
#	exit 1
#fi  
#echo "btcd installed"

#### lnd
if ! git clone -b v0.6.1-beta https://github.com/lightningnetwork/lnd $GOPATH/src/github.com/lightningnetwork/lnd >> /tmp/xud-simnet-install.log 2>&1;then
	echo "unable to git clone lnd"
	exit 1
fi
cd $GOPATH/src/github.com/lightningnetwork/lnd
echo "lnd repo downloaded"
if ! git apply ~/xud-simnet/scripts/limits.patch >> /tmp/xud-simnet-install.log 2>&1 ; then
	echo "unable to apply lnd limit pacth"
	exit 1
fi
echo "lnd patched"
if ! GO111MODULE=off GOPATH=$GOPATH make tags="invoicesrpc"  >> /tmp/xud-simnet-install.log 2>&1 ; then
	echo "unable to make lnd"
	exit 1
fi
echo "lnd compiled"
if !  make install tags="invoicesrpc" >> /tmp/xud-simnet-install.log 2>&1 ; then
	echo "unable to make install lnd"
	exit 1
fi
echo "lnd installed"

#### xud
cd ~/xud-simnet
if ! git clone https://github.com/ExchangeUnion/xud.git >> /tmp/xud-simnet-install.log 2>&1; then
	echo "unable to git clone xud"
	exit 1
fi
cd xud
if ! npm install >> /tmp/xud-simnet-install.log 2>&1 ; then
	echo "unable to npm install xud"
	exit 1
fi
if ! npm run compile >> /tmp/xud-simnet-install.log 2>&1 ; then
	echo "unable to build xud"
	exit 1
fi
~/xud-simnet/scripts/xud-simnet-install-raiden
echo "xud installed"
echo "Ready!"
